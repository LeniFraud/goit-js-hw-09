{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,UACzCE,EAEIJ,EADFK,SAAYC,EAAKF,EAALG,MAAOC,EAAIJ,EAAJK,KAAMC,EAAMN,EAANO,OAqB3B,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtDG,EAAK,sBAAuCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACnDA,E,IAIP,SAASS,EAAUC,GACjB1B,EAAA2B,OAAOC,QAAQF,E,CAGjB,SAASG,EAAQC,GACf9B,EAAA2B,OAAOI,QAAQD,E,CArCjBzB,EAAU2B,iBAAiB,SAE3B,SAA0BC,GACxBA,EAAMC,iBAUN,IARA,IAAMC,EAAW,CACfC,MAAOC,OAAO7B,EAAM8B,OACpBC,OAAQF,OAAO3B,EAAK4B,OACpBE,IAAKH,OAAOzB,EAAO0B,QAGNC,EAAgBJ,EAAhBI,OAAQC,EAAQL,EAARK,IAEdC,EAAI,EAAGC,EAFeP,EAAvBC,MAE2BK,GAAKD,EAAKC,GAAK,EAAGC,GAAaH,EAChEzB,EAAc2B,EAAGC,GAAWC,KAAKlB,GAAWmB,MAAMf,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\nconst {\n  elements: { delay, step, amount },\n} = formRef;\n\nsubmitBtn.addEventListener('click', onSubmitBtnClick);\n\nfunction onSubmitBtnClick(event) {\n  event.preventDefault();\n\n  const formData = {\n    start: Number(delay.value),\n    growth: Number(step.value),\n    amt: Number(amount.value),\n  };\n\n  const { start, growth, amt } = formData;\n\n  for (let i = 1, delayTime = start; i <= amt; i += 1, delayTime += growth) {\n    createPromise(i, delayTime).then(onSuccess).catch(onError);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onSuccess(result) {\n  Notify.success(result);\n}\n\nfunction onError(error) {\n  Notify.failure(error);\n}\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       }\n\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }, delay);\n//   });\n\n//   promise\n//     .then(result => {\n//       Notify.success(`${result}`);\n//     })\n//     .catch(error => {\n//       Notify.failure(`${error}`);\n//     });\n// }\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$submitBtn","$ce04d3a99e08e73b$var$_elements","elements","$ce04d3a99e08e73b$var$delay","delay","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$onSuccess","result","Notify","success","$ce04d3a99e08e73b$var$onError","error","failure","addEventListener","event","preventDefault","formData","start","Number","value","growth","amt","i","delayTime","then","catch"],"version":3,"file":"03-promises.00b2d5b9.js.map"}