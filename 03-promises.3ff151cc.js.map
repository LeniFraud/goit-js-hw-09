{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASC,cAAc,WAEvCE,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IACvBV,EAoBJ,SAASW,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GACrDA,EAAM,G,CAIb,SAASQ,EAAUC,GACjBxB,EAAAyB,OAAOC,QAAQF,E,CAGjB,SAASG,EAAQC,GACf5B,EAAAyB,OAAOI,QAAQD,E,CArCjBvB,EAAUyB,iBAAiB,SAE3B,SAA0BC,GACxBA,EAAMC,iBAEN,MAAMC,EAAW,CACfC,MAAOC,OAAO3B,EAAM4B,OACpBC,OAAQF,OAAOzB,EAAK0B,OACpBE,IAAKH,OAAOvB,EAAOwB,SAGfF,MAAEA,EAAKG,OAAEA,EAAMC,IAAEA,GAAQL,EAE/B,IAAK,IAAIM,EAAI,EAAGC,EAAYN,EAAOK,GAAKD,EAAKC,GAAK,EAAGC,GAAaH,EAChExB,EAAc0B,EAAGC,GAAWC,KAAKlB,GAAWmB,MAAMf,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\nconst {\n  elements: { delay, step, amount },\n} = formRef;\n\nsubmitBtn.addEventListener('click', onSubmitBtnClick);\n\nfunction onSubmitBtnClick(event) {\n  event.preventDefault();\n\n  const formData = {\n    start: Number(delay.value),\n    growth: Number(step.value),\n    amt: Number(amount.value),\n  };\n\n  const { start, growth, amt } = formData;\n\n  for (let i = 1, delayTime = start; i <= amt; i += 1, delayTime += growth) {\n    createPromise(i, delayTime).then(onSuccess).catch(onError);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onSuccess(result) {\n  Notify.success(result);\n}\n\nfunction onError(error) {\n  Notify.failure(error);\n}\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       }\n\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }, delay);\n//   });\n\n//   promise\n//     .then(result => {\n//       Notify.success(`${result}`);\n//     })\n//     .catch(error => {\n//       Notify.failure(`${error}`);\n//     });\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$submitBtn","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSuccess","result","Notify","success","$47d4ff9957288465$var$onError","error","failure","addEventListener","event","preventDefault","formData","start","Number","value","growth","amt","i","delayTime","then","catch"],"version":3,"file":"03-promises.3ff151cc.js.map"}